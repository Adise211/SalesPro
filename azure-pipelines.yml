# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
  - main

pool: Self-Hosted-1

steps:
  - powershell: |
      $json = Get-Content -Path $(Build.SourcesDirectory)\config.json | ConvertFrom-Json

      $json.enviroment = "staging"

      $json | ConvertTo-Json -Depth 10 | Set-Content -Path $(Build.SourcesDirectory)\config.json
    displayName: "Modify JSON File with PowerShell"

  - task: Npm@1
    displayName: "npm install"
    inputs:
      command: "install"
      workingDir: ""
      customRegistry: "useFeed"
      customFeed: "db7a7be3-b4a6-4fc1-b8be-0f85048bfaab"

  - script: |
      npm install -g firebase-tools
      npm install dotenv dotenv-expand
    displayName: "Install Firebase Hosting & DotEnv"

  - task: DownloadSecureFile@1
    displayName: "Download .env File"
    inputs:
      secureFile: ".env"

  - task: CopyFiles@2
    displayName: "Copy .env File Into Project Folder"
    inputs:
      SourceFolder: "$(Agent.TempDirectory)"
      Contents: "*/.env"
      TargetFolder: "$(Build.SourcesDirectory)"

  - task: Npm@1
    displayName: "npm build"
    inputs:
      command: "custom"
      workingDir: ""
      customCommand: "run build"
      customRegistry: "useFeed"
      customFeed: "db7a7be3-b4a6-4fc1-b8be-0f85048bfaab"

  - script: |
      firebase deploy --token $(FIREBASE_TOKEN)
    displayName: "Deploy To Firebase"

  - task: ArchiveFiles@2
    displayName: "Save into Zip file"
    inputs:
      rootFolderOrFile: "dist"
      includeRootFolder: true
      archiveType: "zip"
      archiveFile: "$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip"
      replaceExistingArchive: true
